package mods.defeatedcrow.world.gen;

import mods.defeatedcrow.util.SHLogger;
import mods.defeatedcrow.world.biome.BiomeGenBaseReverse;
import net.minecraft.world.WorldType;
import net.minecraft.world.biome.BiomeGenBase;
import net.minecraft.world.gen.layer.IntCache;

public class GenLayerBiomeReverse extends GenLayerReverse
{
    /** this sets all the biomes that are allowed to appear in the overworld */
    private BiomeGenBaseReverse[] allowedBiomes;

    public GenLayerBiomeReverse(long par1, GenLayerReverse par3GenLayer, WorldType par4WorldType)
    {
        super(par1);
        this.allowedBiomes = BiomeGenBaseReverse.decorationBiomes;
        this.parent = par3GenLayer;

    }

    /**
     * Returns a list of integer values generated by this layer. These may be interpreted as temperatures, rainfall
     * amounts, or biomeList[] indices based on the particular GenLayer subclass.
     */
    public int[] getInts(int par1, int par2, int par3, int par4)
    {
        int[] aint = this.parent.getInts(par1, par2, par3, par4);
        int[] aint1 = IntCache.getIntCache(par3 * par4);

        for (int i1 = 0; i1 < par4; ++i1)
        {
            for (int j1 = 0; j1 < par3; ++j1)
            {
                this.initChunkSeed((long)(j1 + par1), (long)(i1 + par2));
                int k1 = aint[j1 + i1 * par3];

                if (k1 == 0)
                {
                    aint1[j1 + i1 * par3] = 0;
                }
                else if (k1 == BiomeGenBaseReverse.curiousInferno.biomeID)
                {
                    aint1[j1 + i1 * par3] = k1;
                }
                else
                {
                    aint1[j1 + i1 * par3] = this.allowedBiomes[this.nextInt(this.allowedBiomes.length)].biomeID;
                }
            }
        }

        SHLogger.debugInfo("check7 : " + aint1.length);
        return aint1;
    }
}
